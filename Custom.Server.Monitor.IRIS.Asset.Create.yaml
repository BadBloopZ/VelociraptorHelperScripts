name: Custom.Server.Monitor.IRIS.Asset.Create
description: |
   Create an IRIS asset when clients get a system type label and a second one.  Adds the hostname, the domain, last IP address as properties and the ClientId as well as all existing labels as tags. Afterwards, the IRIS tag is added on Velo. As long as the IRIS tag is in place, the asset won't be readded.
  
   Learn more about IRIS, here: https://dfir-iris.org/
  
   It is recommended to use the Server Metadata section to store credentials, instead of having to store directly inside the artifact.
   This artifact utilized some parts of Wes Lamberts Server.Monitor.IRIS.Case.Create artifact.

type: SERVER_EVENT

author: Stephan Mikiss - @StephMikiss

parameters:
  - name: IrisURL
    default:
  - name: IrisKey
    type: string
    description: API key for DFIR-IRIS. Leave blank here if using server metadata store.
    default:
  - name: DisableSSLVerify
    type: bool
    default: true
  - name: IrisCaseId
    default: 1
    type: int
    
sources:
  - query: |
      LET URL <= if(
            condition=IrisURL,
            then=IrisURL,
            else=server_metadata().IrisURL)
      LET Creds = if(
           condition=IrisKey,
           then=IrisKey,
           else=server_metadata().IrisKey)
      LET CaseID <= if(
           condition=IrisCaseId,
           then=IrisCaseId,
           else=server_metadata().IrisCaseId)
    
      LET scheduler = SELECT * FROM clock(period=5)

      LET matches = SELECT * FROM switch(
        a={SELECT client_id,os_info.hostname as Hostname,join(array=slice(list=split(sep_string=".",string=os_info.fqdn),start=1,end=-1),sep=".") as Domain,split(sep_string=":",string=last_ip)[0] as IP,timestamp(epoch=first_seen_at) as FirstSeen,label(client_id=client_id,labels="IRIS",op="set"),label(client_id=client_id,labels="IRIS-ADD",op="remove"),{SELECT * FROM http_client(
            data=serialize(
                item=dict(
                    asset_name=format(format="%v",args=[os_info.hostname]), 
                    asset_type_id=9, 
                    analysis_status_id=1,
                    cid=CaseID,
                    asset_compromised=null,
                    asset_domain=format(format="%v",args=[join(array=slice(list=split(sep_string=".",string=os_info.fqdn),start=1,end=-1),sep=".")]),
                    asset_ip=format(format="%v",args=[split(sep_string=":",string=last_ip)[0]]),
                    asset_tags=format(format="Velo,%v",args=[join(array=array(a1={SELECT _value FROM foreach(row=labels) WHERE NOT _value = "Workstation" AND NOT _value = "IRIS-ADD"}),sep=",")]),
                    asset_description=format(format="Velo ClientId: %v\nVelo Agent First seen: %v", args=[client_id,timestamp(epoch=first_seen_at)])
                )
                ,format="json"
            ),
            headers=dict(`Content-Type`="application/json", `Authorization`=format(format="Bearer %v", args=[Creds])),
            disable_ssl_security=DisableSSLVerify,
            method="POST",
            url=format(format="%v/case/assets/add", args=[URL]))
            } FROM clients(search="label:IRIS-ADD") WHERE "Workstation" in labels AND NOT "IRIS" in labels },
        b={SELECT client_id,os_info.hostname as Hostname,join(array=slice(list=split(sep_string=".",string=os_info.fqdn),start=1,end=-1),sep=".") as Domain,split(sep_string=":",string=last_ip)[0] as IP,timestamp(epoch=first_seen_at) as FirstSeen,label(client_id=client_id,labels="IRIS",op="set"),label(client_id=client_id,labels="IRIS-ADD",op="remove"),{SELECT * FROM http_client(
            data=serialize(
                item=dict(
                    asset_name=format(format="%v",args=[os_info.hostname]), 
                    asset_type_id=10, 
                    analysis_status_id=1,
                    cid=CaseID, 
                    asset_compromised=null,
                    asset_domain=format(format="%v",args=[join(array=slice(list=split(sep_string=".",string=os_info.fqdn),start=1,end=-1),sep=".")]),
                    asset_ip=format(format="%v",args=[split(sep_string=":",string=last_ip)[0]]),
                    asset_tags=format(format="Velo,%v",args=[join(array=array(a1={SELECT _value FROM foreach(row=labels) WHERE NOT _value = "Server" AND NOT _value = "IRIS-ADD"}),sep=",")]),
                    asset_description=format(format="Velo ClientId: %v\nVelo Agent First seen: %v", args=[client_id,timestamp(epoch=first_seen_at)])
                )
                ,format="json"
            ),
            headers=dict(`Content-Type`="application/json", `Authorization`=format(format="Bearer %v", args=[Creds])),
            disable_ssl_security=DisableSSLVerify,
            method="POST",
            url=format(format="%v/case/assets/add", args=[URL]))
            } FROM clients(search="label:IRIS-ADD") WHERE "Server" in labels AND NOT "IRIS" in labels },
        c={SELECT client_id,os_info.hostname as Hostname,join(array=slice(list=split(sep_string=".",string=os_info.fqdn),start=1,end=-1),sep=".") as Domain,split(sep_string=":",string=last_ip)[0] as IP,timestamp(epoch=first_seen_at) as FirstSeen,label(client_id=client_id,labels="IRIS",op="set"),label(client_id=client_id,labels="IRIS-ADD",op="remove"),{SELECT * FROM http_client(
            data=serialize(
                item=dict(
                    asset_name=format(format="%v",args=[os_info.hostname]), 
                    asset_type_id=11, 
                    analysis_status_id=1,
                    cid=CaseID, 
                    asset_compromised=null,
                    asset_domain=format(format="%v",args=[join(array=slice(list=split(sep_string=".",string=os_info.fqdn),start=1,end=-1),sep=".")]),
                    asset_ip=format(format="%v",args=[split(sep_string=":",string=last_ip)[0]]),
                    asset_tags=format(format="Velo,%v",args=[join(array=array(a1={SELECT _value FROM foreach(row=labels) WHERE NOT _value = "Server" AND NOT _value = "IRIS-ADD"}),sep=",")]),
                    asset_description=format(format="Velo ClientId: %v\nVelo Agent First seen: %v", args=[client_id,timestamp(epoch=first_seen_at)])
                )
                ,format="json"
            ),
            headers=dict(`Content-Type`="application/json", `Authorization`=format(format="Bearer %v", args=[Creds])),
            disable_ssl_security=DisableSSLVerify,
            method="POST",
            url=format(format="%v/case/assets/add", args=[URL]))
            } FROM clients(search="label:IRIS-ADD") WHERE "Domain Controller" in labels AND NOT "IRIS" in labels},
        d={SELECT client_id,os_info.hostname as Hostname,join(array=slice(list=split(sep_string=".",string=os_info.fqdn),start=1,end=-1),sep=".") as Domain,split(sep_string=":",string=last_ip)[0] as IP,timestamp(epoch=first_seen_at) as FirstSeen,label(client_id=client_id,labels="IRIS",op="set"),label(client_id=client_id,labels="IRIS-ADD",op="remove"),{SELECT * FROM http_client(
            data=serialize(
                item=dict(
                    asset_name=format(format="%v",args=[os_info.hostname]), 
                    asset_type_id=3, 
                    analysis_status_id=1,
                    cid=CaseID, 
                    asset_compromised=null,
                    asset_domain=format(format="%v",args=[join(array=slice(list=split(sep_string=".",string=os_info.fqdn),start=1,end=-1),sep=".")]),
                    asset_ip=format(format="%v",args=[split(sep_string=":",string=last_ip)[0]]),
                    asset_tags=format(format="Velo,%v",args=[join(array=array(a1={SELECT _value FROM foreach(row=labels) WHERE NOT _value = "Server" AND NOT _value = "IRIS-ADD"}),sep=",")]),
                    asset_description=format(format="Velo ClientId: %v\nVelo Agent First seen: %v", args=[client_id,timestamp(epoch=first_seen_at)])
                )
                ,format="json"
            ),
            headers=dict(`Content-Type`="application/json", `Authorization`=format(format="Bearer %v", args=[Creds])),
            disable_ssl_security=DisableSSLVerify,
            method="POST",
            url=format(format="%v/case/assets/add", args=[URL]))
            } FROM clients(search="label:IRIS-ADD") WHERE "Linux" in labels AND NOT "IRIS" in labels}
      )

      SELECT * FROM foreach(row=scheduler, query=matches)
